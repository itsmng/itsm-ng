{% macro optgroup(name, options, selected) %}
  <optgroup label="{{name}}">
    {% for name, content in options %}
      {% if content is iterable %}
        {{ _self.optgroup(name, content) }}
      {% else %}
        <option value="{{name}}" {% if selected == name %}selected="selected"{% endif %}>{{content|raw}}</option>
      {% endif %}
    {% endfor %}
  </optgroup>
{% endmacro %}

{% macro select(attributes) %}
  {% if not attributes.id %}
    {% set id = random() %}
  {% else %}
    {% set id = attributes.id %}
  {% endif %}
  <select class='form-select form-select-sm {{attributes.class}}' id="{{id}}"
    {% for name, value in attributes %}
      {% if name not in  ['values', 'class', 'multiple', 'conditions', 'ajax', 'itemtype']%}
        {{name}}="{{value}}"
      {% endif %}
    {% endfor %}
    {% if attributes.name is defined %}
      aria-label="{{ attributes.name }}"
    {% endif %}>
    {% for key, item in attributes.values %}
      {% if item is iterable %}
        {{ _self.optgroup(key, item, attributes.value) }}
      {% else %}
        <option value="{{key}}" {% if attributes.value == key %}selected="selected"{% endif %}>{{item|raw}}</option>
      {% endif %}
    {% endfor %}
  </select>
  {% if attributes.noLib is not defined or attributes.noLib == false %}
  <script>
      $(function() {
        {% if attributes.ajax %}
            const params = {{attributes.ajax|json_encode|raw}};
            const data = params.data;
            params.dataType = 'json';
            params.delay = 250;
            params.data = function (params) {
                return {
                    searchText: params.term,
                    page: params.page || 1,
                    page_limit: 500,
                    ...data
                };
            };
            params.initSelection = function (element, callback) {
                const id = $(element).val();
                if (id !== '') {
                    $.ajax({
                        url: params.url,
                        dataType: 'json',
                        data: {
                            id: id,
                            ...data
                        }
                    }).done(function(data) {
                        callback(data);
                    });
                }
            };
        {% endif %}
        $.getScript('{{root_doc}}/node_modules/select2/dist/js/select2.min.js', function() {
            $('#{{attributes.id ? attributes.id : id}}').select2({
                theme: 'bootstrap-5',
                escapeMarkup: function(markup) {
                    return markup;
                },
                {% if attributes.ajax %}
                ajax: params,
                {% endif %}
                {% if attributes.multiple %}
                multiple: true,
                {% endif %}
            });
            {% if attributes.multiple %}
            let values = JSON.parse('{{attributes.value|raw}}');
            if (typeof values === 'object') {
                values = Object.keys(values);
            }
            $('#{{attributes.id ? attributes.id : id}}')
                .val(values)
                .trigger('change');
            {% endif %}
        });
      });
  </script>
  {% endif %}
{% endmacro %}
{{ _self.select(attributes) }}
