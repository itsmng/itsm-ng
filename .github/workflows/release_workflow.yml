name: Release workflow

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: test_db
      DB_DATABASE_UNIT: unit_db
      DB_USER: test
      DB_PASSWORD: test
      TAG: ${{ github.ref_name }}

    steps:
      - uses: actions/checkout@v4

      - name: check if version is set
        run:  grep -q "define('ITSM_VERSION', '${TAG#v}');" inc/define.php && echo "Version correspondante" || { echo "La version dans inc/define.php n'est pas bonne"; exit 5; }

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run composer install
        run: export NODE_OPTIONS=--openssl-legacy-provider && php bin/console dependencies install

      - name: Start MySQL
        run: |
          sudo apt autoremove --purge mysql*
          sudo apt update
          sudo apt install mariadb-server
          sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_DATABASE;"
          sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASSWORD';"
          sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_DATABASE.* TO '$DB_USER'@'localhost';"
          sudo mysql -e "FLUSH PRIVILEGES;"

      - name: Install ITSM-ng
        run: php bin/console itsmng:database:install -H localhost -u $DB_USER -p $DB_PASSWORD -d $DB_DATABASE -n

      - name: Setup Unit environment
        run: |
          sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_DATABASE_UNIT;"
          sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_DATABASE_UNIT.* TO '$DB_USER'@'localhost';"
          sudo mysql -e "FLUSH PRIVILEGES;"
          php bin/console itsmng:database:install --config-dir=/home/runner/work/itsm-ng/itsm-ng/tests/config -H localhost -u $DB_USER -p $DB_PASSWORD -d $DB_DATABASE_UNIT -n

      - name: Run PHP Unit tests
        run: vendor/bin/atoum -p 'php -d memory_limit=512M' --debug --force-terminal --use-dot-report --bootstrap-file tests/bootstrap.php --fail-if-skipped-methods --max-children-number 10 -d tests/units

      - name: Setup migration environment
        run: |
          sudo mysql -e "CREATE DATABASE IF NOT EXISTS itsm_migration;"
          sudo mysql -e "CREATE USER IF NOT EXISTS 'itsm_migration'@'localhost' IDENTIFIED BY 'itsm_migration';"
          sudo mysql -e "GRANT ALL PRIVILEGES ON itsm_migration.* TO 'itsm_migration'@'localhost';"
          sudo mysql -e "FLUSH PRIVILEGES;"
          sudo mysql -u itsm_migration -pitsm_migration itsm_migration < tests/migrations/schema.sql

      - name: Run migration tests
        run: php bin/console itsmng:database:update --config-dir=/home/runner/work/itsm-ng/itsm-ng/tests/migrations -n

      - name: Run PHP Unit tests
        run: vendor/bin/atoum -p 'php -d memory_limit=512M' --debug --force-terminal --use-dot-report --bootstrap-file tests/bootstrap.php --fail-if-skipped-methods --max-children-number 10 -d tests/units

      - name: Clean environment
        run: |
          rm -f config/config_db.php config/glpicrypt.key files/_log/*.log

      - name: Release ITSM-ng
        run: |
          sudo apt install gettext -y
          cd tools/
          # Remove the 'v' prefix from the tag
          export TAG=$(sed -e 's/^v//' <<< $TAG)
          ./make_release.sh -y ../ $TAG
          mv /tmp/itsm-ng-${TAG}.tgz /tmp/itsm-ng-v${TAG}.tgz

      - name: Upload release
        uses: actions/upload-artifact@v4
        with:
          name: itsm-ng-${{ github.ref_name }}.tgz
          path: /tmp/itsm-ng-${{ github.ref_name }}.tgz

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: /tmp/itsm-ng-${{ github.ref_name }}.tgz
          body: "New release is available"
          name: ITSM-NG ${{ github.ref_name }}
          draft: true
          generate_release_notes: true

